{"version":3,"sources":["scripts/main.js"],"names":["field","score","button","document","querySelector","fieldRows","gameScore","messageStart","messageWin","messageLose","cells","startGame","textContent","addNumbers","startKeyboardListener","rowNumber","Math","floor","random","colNumber","showCells","x","y","rows","className","classList","add","addEventListener","arrowKeyAction","e","oldField","JSON","parse","stringify","key","moveLeft","moveRight","moveUp","moveDown","fieldChanged","goalNumber","remove","haveMoves","removeEventListener","checkZero","row","newRow","filter","length","push","move","i","canMove","canMerge","canSlide","hasFreeCells","some","cell","hasMerged","reverse","contains"],"mappings":"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","file":"main.fed3938f.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst button = document.querySelector('.button');\nconst fieldRows = document.querySelector('tbody');\nconst gameScore = document.querySelector('.game-score');\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\n\nlet field;\nlet score;\nconst cells = 4;\n\nfunction startGame() {\n  field = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n  score = 0;\n  gameScore.textContent = score;\n  addNumbers();\n  addNumbers();\n  startKeyboardListener();\n}\n\nbutton.addEventListener('click', () => {\n  if (button.classList.contains('start')) {\n    button.classList.remove('start');\n    button.classList.add('restart');\n    button.textContent = 'Restart';\n    messageStart.classList.add('hidden');\n\n    startGame();\n  } else {\n    startGame();\n\n    messageLose.classList.add('hidden');\n    messageWin.classList.add('hidden');\n  }\n});\n\nfunction addNumbers() {\n  while (true) {\n    const rowNumber = Math.floor(Math.random() * cells);\n    const colNumber = Math.floor(Math.random() * cells);\n\n    if (field[rowNumber][colNumber] === 0) {\n      field[rowNumber][colNumber] = Math.random() >= 0.9 ? 4 : 2;\n      break;\n    }\n  }\n\n  showCells();\n};\n\nfunction showCells() {\n  for (let x = 0; x < cells; x++) {\n    for (let y = 0; y < cells; y++) {\n      fieldRows.rows[x].cells[y].className = '';\n      fieldRows.rows[x].cells[y].classList.add(`field-cell`);\n      fieldRows.rows[x].cells[y].classList.add(`field-cell--${field[x][y]}`);\n      fieldRows.rows[x].cells[y].textContent = field[x][y] || '';\n    }\n  }\n}\n\nfunction startKeyboardListener() {\n  document.addEventListener('keydown', arrowKeyAction);\n}\n\nfunction arrowKeyAction(e) {\n  const oldField = JSON.parse(JSON.stringify(field));\n\n  switch (e.key) {\n    case 'ArrowLeft':\n      moveLeft();\n      break;\n\n    case 'ArrowRight':\n      moveRight();\n      break;\n\n    case 'ArrowUp':\n      moveUp();\n      break;\n\n    case 'ArrowDown':\n      moveDown();\n      break;\n  }\n\n  if (fieldChanged(oldField)) {\n    addNumbers();\n    gameScore.textContent = score;\n\n    if (goalNumber()) {\n      messageWin.classList.remove('hidden');\n    }\n  }\n\n  if (!haveMoves()) {\n    messageLose.classList.remove('hidden');\n    document.removeEventListener('keydown', arrowKeyAction);\n  }\n}\n\nfunction fieldChanged(oldField) {\n  for (let x = 0; x < cells; x++) {\n    for (let y = 0; y < cells; y++) {\n      if (oldField[x][y] !== field[x][y]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction checkZero(row) {\n  const newRow = row.filter(x => x !== 0);\n\n  while (newRow.length < cells) {\n    newRow.push(0);\n  }\n\n  return newRow;\n}\n\nfunction move(row) {\n  let newRow = row;\n\n  newRow = checkZero(newRow);\n\n  for (let i = 0; i < newRow.length; i++) {\n    if (newRow[i] === newRow[i + 1] && newRow[i] !== 0) {\n      newRow[i] *= 2;\n      newRow[i + 1] = 0;\n      score += newRow[i];\n    }\n  }\n\n  newRow = checkZero(newRow);\n\n  return newRow;\n}\n\nfunction canMove(row) {\n  for (let i = 0; i < row.length; i++) {\n    const canMerge = (row[i] === row[i + 1] && row[i] !== 0);\n    const canSlide = (row[i] === 0 && row[i + 1] !== 0);\n\n    if (canMerge || canSlide) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// function haveMoves() {\n//   const hasFreeCells = field.some(row => row.some(cell => cell === 0));\n//   let hasMerged = false;\n\n//   for (let x = 0; x < cells - 1; x++) {\n//     for (let y = 0; y < cells; y++) {\n//       if (field[x][y] === field[x][y + 1] && field[x][y] !== 0) {\n//         hasMerged = true;\n//         fieldRows.rows[x].cells[y].classList.add('field-cell--merged');\n//         fieldRows.rows[x].cells[y + 1].classList.add('field-cell--merged');\n//       }\n//     }\n//   }\n\n//   for (let x = 0; x < cells; x++) {\n//     for (let y = 0; y < cells - 1; y++) {\n//       if (field[x][y] === field[x][y + 1] && field[x][y] !== 0) {\n//         hasMerged = true;\n//         fieldRows.rows[x].cells[y].classList.add('field-cell--merged');\n//         fieldRows.rows[x].cells[y + 1].classList.add('field-cell--merged');\n//       }\n//     }\n//   }\n\n//   setTimeout(() => {\n//     document.querySelectorAll('.field-cell--merged').forEach(cell => {\n//       cell.classList.remove('field-cell--merged');\n//     });\n//   }, 300);\n\n//   return hasFreeCells || hasMerged;\n// }\n\nfunction haveMoves() {\n  const hasFreeCells = field.some(row => row.some(cell => cell === 0));\n  let hasMerged = false;\n\n  for (let x = 0; x < cells - 1; x++) {\n    for (let y = 0; y < cells; y++) {\n      if (field[x][y] === field[x][y + 1]) {\n        hasMerged = true;\n\n        break;\n      }\n    }\n  }\n\n  for (let x = 0; x < cells - 1; x++) {\n    for (let y = 0; y < cells; y++) {\n      if (field[x][y] === field[x + 1][y]) {\n        hasMerged = true;\n\n        break;\n      }\n    }\n  }\n\n  return hasFreeCells || hasMerged;\n}\n\nfunction goalNumber() {\n  for (let x = 0; x < cells; x++) {\n    for (let y = 0; y < cells; y++) {\n      if (field[x][y] === 2048) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction moveUp() {\n  for (let y = 0; y < cells; y++) {\n    let row = [\n      field[0][y],\n      field[1][y],\n      field[2][y],\n      field[3][y],\n    ];\n\n    if (canMove(row)) {\n      row = move(row);\n\n      for (let x = 0; x < cells; x++) {\n        field[x][y] = row[x];\n      }\n    }\n  }\n}\n\nfunction moveDown() {\n  for (let y = 0; y < cells; y++) {\n    let row = [\n      field[0][y],\n      field[1][y],\n      field[2][y],\n      field[3][y],\n    ];\n\n    if (canMove(row)) {\n      row = move(row.reverse()).reverse();\n\n      for (let x = 0; x < cells; x++) {\n        field[x][y] = row[x];\n      }\n    }\n  }\n}\n\nfunction moveRight() {\n  for (let x = 0; x < cells; x++) {\n    let row = field[x];\n\n    if (canMove([...row].reverse())) {\n      row = move(row.reverse()).reverse();\n\n      for (let y = 0; y < row.length; y++) {\n        field[x][y] = row[y];\n      }\n    }\n  }\n}\n\nfunction moveLeft() {\n  for (let x = 0; x < cells; x++) {\n    let row = field[x];\n\n    if (canMove(row)) {\n      row = move(field[x]);\n\n      for (let y = 0; y < row.length; y++) {\n        field[x][y] = row[y];\n      }\n    }\n  }\n}\n"]}